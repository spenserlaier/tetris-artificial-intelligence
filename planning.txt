
how should pieces be represented?

the current piece should probably be represented as a series
of positions which can then be adjusted (rotated), assuming that the
positional adjustments don't cause overlap with the pre-existing pieces
or the board itself

if the piece reaches a point where any of its bototmmost surfaces 
are in contact with either the board itself or another placed piece,
then that piece needs to be set in its current position and become a part
of the board

after a piece has been placed, while the any row is full, remove it
and adjust the positions of all rows above it downwards by one

if the position of a portion of a new piece overlaps with any existing piece, then the game is over

neural network planning
how should we reward and penalize the network?

reward: increases in score; reduction in number of holes; increase in time (i.e. survival);
    - also, reaching a certain "endgame" score, like 1000 or something-- prevents infinite execution
    from becoming an issue
penalize: increases in holes; increases in average height (maybe?); executing a move that isn't valid
    (ex. attempting to move left into a wall)
